@using WebTruyenTranh.Models.ViewModel
@model MangaPageViewModel

@{
    Layout = null; // Tắt layout mặc định
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Read Manga - WebTruyen Tranh</title>
    <!-- Liên kết Bootstrap CSS qua CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <style>
        body {
        font-family: 'Roboto', Arial, sans-serif;
        background-color: #1a1a1a; /* Nền tối kiểu Mangadex */
        color: #f0f0f0;
        min-height: 100vh;
        overflow-x: hidden;
        margin: 0;
        padding: 0;
        }

        /* Container chính */
        .manga-reader {
        width: 100%;
        max-width: 1000px; /* Giới hạn chiều rộng tối đa */
        margin: 0 auto;
        padding: 20px 0;
        }

        .manga-image {
        width: 100%;
        height: auto;
        object-fit: contain; /* Đảm bảo ảnh không bị méo */
        border-radius: 5px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.7); /* Bóng đổ cho ảnh */
        background-color: #fff; /* Nền trắng cho ảnh */
        margin-bottom: 10px; /* Khoảng cách giữa các ảnh */
        display: block;
        opacity: 1;
        transition: opacity 0.3s ease-in-out; /* Hiệu ứng fade khi tải ảnh */
        }

        .manga-image.loading {
        opacity: 0; /* Ẩn ảnh khi đang tải */
        }

        /* Header section */
        .manga-header {
        background-color: #2a2a2a; /* Nền tối hơn cho header */
        padding: 15px;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 10px;
        border: 1px solid #444;
        }

        .manga-title {
        font-size: 24px;
        font-weight: bold;
        color: #f0f0f0;
        margin: 0 10px;
        flex-grow: 1;
        }

        .chapter-info {
        font-size: 18px;
        color: #00cccc;
        margin-right: 10px;
        }

        /* Navigation bar (used for both top and bottom) */
        .chapter-navigation {
        background-color: #2a2a2a; /* Nền tối hơn */
        padding: 10px;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 20px 0;
        border: 1px solid #444;
        position: sticky;
        top: 0;
        z-index: 1000;
        }

        .chapter-navigation select {
        padding: 5px;
        border: 1px solid #444;
        border-radius: 5px;
        background-color: #333;
        color: #f0f0f0;
        font-size: 16px;
        width: 150px;
        }

        .chapter-navigation button {
        padding: 5px 15px;
        border: 1px solid #444;
        border-radius: 5px;
        background-color: #007bff;
        color: #fff;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
        }

        .chapter-navigation button:hover {
        background-color: #0056b3;
        }

        /* Next chapter section */
        .next-chapter {
        background-color: #2a2a2a;
        padding: 15px;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 20px 0;
        border: 1px solid #444;
        color: #f0f0f0;
        }

        .next-chapter a {
        color: #00cccc;
        text-decoration: none;
        }

        .next-chapter a:hover {
        text-decoration: underline;
        }

        .next-chapter label {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 16px;
        color: #f0f0f0;
        }

        .next-chapter button {
        padding: 5px 15px;
        background-color: #28a745;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        }

        .next-chapter button:hover {
        background-color: #218838;
        }

        /* Comments section */
        .comments-section {
        margin: 20px 0;
        }

        .comments-header {
        font-size: 24px;
        font-weight: bold;
        color: #f0f0f0;
        margin-bottom: 10px;
        }

        .comment-input {
        display: flex;
        flex-direction: column;
        gap: 10px;
        background-color: #2a2a2a;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #444;
        margin-bottom: 20px;
        }

        .comment-input textarea {
        width: 100%;
        height: 80px;
        padding: 5px;
        border: 1px solid #444;
        border-radius: 5px;
        background-color: #333;
        color: #f0f0f0;
        resize: none;
        font-size: 16px;
        }

        .comment-input button {
        padding: 5px 15px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        align-self: flex-end;
        }

        .comment-input button:hover {
        background-color: #0056b3;
        }

        .comment-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
        }

        .comment {
        background-color: #2a2a2a;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #444;
        }

        .comment-header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 5px;
        }

        .comment-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-color: #444;
        }

        .comment-username {
        font-weight: bold;
        color: #00cccc;
        }

        .comment-timestamp {
        font-size: 14px;
        color: #888;
        }

        .comment-body {
        font-size: 16px;
        color: #f0f0f0;
        margin-left: 42px; /* Align with avatar */
        }

        .comment-actions {
        margin-top: 5px;
        margin-left: 42px;
        display: flex;
        gap: 10px;
        }

        .comment-actions a {
        color: #00cccc;
        text-decoration: none;
        font-size: 14px;
        }

        .comment-actions a:hover {
        text-decoration: underline;
        }

        .comment-reply {
        margin-left: 40px;
        border-left: 2px solid #444;
        padding-left: 10px;
        margin-top: 10px;
        }

        /* Floating action button */
        .fab {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        cursor: pointer;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
        }

        .fab:hover {
        background-color: #0056b3;
        }

        /* Responsive cho màn hình nhỏ */
        @@media (max-width: 768px) {
        .manga-reader

        {
        padding: 10px;
        }

        .manga-image {
        margin-bottom: 5px;
        }

        .manga-header {
        flex-direction: column;
        gap: 10px;
        }

        .chapter-navigation,
        .next-chapter {
        flex-direction: column;
        gap: 10px;
        }

        .chapter-navigation select,
        .chapter-navigation button,
        .next-chapter label,
        .next-chapter button {
        width: 100%;
        }

        .manga-title,
        .chapter-info {
        text-align: center;
        margin: 5px 0;
        }

        .fab {
        bottom: 10px;
        right: 10px;
        }

        }
    </style>
</head>
<body>
    <!-- Nội dung chính -->
    <main class="manga-reader">
        <div class="container px-0 px-md-3">
            <!-- Header Section -->
            <div class="manga-header">
                <a class="text-decoration-none" asp-controller="Manga" asp-action="DetailManga" asp-route-MangaId="@Model.Manga.MangaId"><span class="manga-title">@Model.Manga.Title</span></a>
                <a class="text-decoration-none" asp-controller="Manga" asp-action="DetailManga" asp-route-MangaId="@Model.Manga.MangaId"><span class="chapter-info">Chapter @ViewBag.CurrentChapter</span></a>
            </div>

            <!-- Hidde Input -->
            <input type="hidden" name="MangaId" value="@Model.Manga.MangaId" />
            @if (Model.NextChapter != null)
            {
                <input type="hidden" name="NextChapterId" value="@Model.NextChapter.ChapterId" />
            }
            @if (Model.PrevChapter != null)
            {
                <input type="hidden" name="PrevChapterId" value="@Model.PrevChapter.ChapterId" />
            }

            <!-- Top Navigation Bar -->
            <div class="chapter-navigation">
                <button onclick="goToPrevChapter()">← Prev Chapter</button>
                <select id="chapter-select-top">
                    @foreach (var item in Model.Chapters)
                    {
                        <option value="@item.ChapterId"
                                selected="@(item.ChapterId == Model.Chapter.ChapterId)">@item.Title</option>
                    }
                </select>
                <button onclick="goToNextChapter()">Next Chapter →</button>
            </div>

            <!-- Manga Images -->
            <div class="image-wrapper">
                @foreach (var item in Model.Contents)
                {
                    <img src="@Url.Content("~/" + item.Image)"
                    data-src="@Url.Content("~/" + item.Image)"
                    alt="Manga Image"
                    class="manga-image loading" />
                }
            </div>

            <!-- Bottom Navigation Bar -->
            <div class="chapter-navigation">
                
                <button onclick="goToPrevChapter()">← Prev Chapter</button>
                <select id="chapter-select-bottom">
                    @foreach (var item in Model.Chapters)
                    {
                        <option value="@item.ChapterId"
                                selected="@(item.ChapterId == Model.Chapter.ChapterId)">@item.Title</option>
                    }
                </select>
                <button onclick="goToNextChapter()">Next Chapter →</button>
            </div>

            <!-- Next Chapter Section -->
            <div class="next-chapter">
                <div>
                    Next Chapter: <a></a>
                </div>
                @* <div style="display: flex; gap: 10px;"> *@
                @*     <label> *@
                @*         <input type="checkbox" id="same-uploader"> Same uploader only *@
                @*     </label> *@
                @*     <button onclick="goToNextChapter()">Go to Next Chapter</button> *@
                @* </div> *@
            </div>

            <!-- Comments Section -->
            <div class="comments-section">
                <div class="comments-header">Comments (3)</div>
                <div class="comment-input">
                    <textarea placeholder="Write a comment... (Sign in to comment)"></textarea>
                    <button onclick="postComment()">Post Comment</button>
                </div>
                <div class="comment-list">
                    <div class="comment">
                        <div class="comment-header">
                            <div class="comment-avatar"></div>
                            <span class="comment-username">DarkSReaperZ</span>
                            <span class="comment-timestamp">4 hours ago</span>
                        </div>
                        <div class="comment-body">
                            Great chapter! Can't wait for the next one.
                        </div>
                        <div class="comment-actions">
                            <a href="#">Like (10)</a>
                            <a href="#">Reply</a>
                            <a href="#">Report</a>
                        </div>
                        <div class="comment-reply">
                            <div class="comment-header">
                                <div class="comment-avatar"></div>
                                <span class="comment-username">MangaFan123</span>
                                <span class="comment-timestamp">2 hours ago</span>
                            </div>
                            <div class="comment-body">
                                Totally agree! The art is amazing too.
                            </div>
                            <div class="comment-actions">
                                <a href="#">Like (5)</a>
                                <a href="#">Reply</a>
                                <a href="#">Report</a>
                            </div>
                        </div>
                    </div>
                    <div class="comment">
                        <div class="comment-header">
                            <div class="comment-avatar"></div>
                            <span class="comment-username">ReaderX</span>
                            <span class="comment-timestamp">1 hour ago</span>
                        </div>
                        <div class="comment-body">
                            I love the character development in this chapter!
                        </div>
                        <div class="comment-actions">
                            <a href="#">Like (8)</a>
                            <a href="#">Reply</a>
                            <a href="#">Report</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Floating Action Button -->
    <button class="fab" onclick="scrollToTop()">↑</button>

    <!-- Modal: Không có chương tiếp theo -->
    <div class="modal fade" id="noNextChapterModal" tabindex="-1" aria-labelledby="noNextChapterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content dark-modal">
                <div class="modal-header border-0">
                    <h5 class="modal-title text-white" id="noNextChapterModalLabel">Thông báo</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body text-white">
                    Chưa có chương tiếp theo. Mong bạn quay lại sau.
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal: Không có chương trước -->
    <div class="modal fade" id="noPrevChapterModal" tabindex="-1" aria-labelledby="noPrevChapterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content dark-modal">
                <div class="modal-header border-0">
                    <h5 class="modal-title text-white" id="noPrevChapterModalLabel">Thông báo</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body text-white">
                    Đây là chương đầu tiên rồi.
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
    <style>
        .dark-modal {
            background-color: #1e1e1e;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);
        }

            .dark-modal .modal-header,
            .dark-modal .modal-footer {
                background-color: #2a2a2a;
            }

            .dark-modal .btn-close-white {
                filter: invert(1);
            }

            .dark-modal .btn-outline-light {
                border-color: #bbb;
                color: #fff;
            }

                .dark-modal .btn-outline-light:hover {
                    background-color: #444;
                    border-color: #fff;
                }

    </style>


    <!-- Liên kết Bootstrap JS qua CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <!-- Script xử lý lazy-loading và navigation -->
    <script>
        // Lazy-loading cho ảnh
        document.addEventListener('DOMContentLoaded', function () {
            const images = document.querySelectorAll('.manga-image');

            // Kiểm tra nếu trình duyệt hỗ trợ IntersectionObserver
            if ('IntersectionObserver' in window) {
                const imageObserver = new IntersectionObserver((entries, observer) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            const src = img.getAttribute('data-src');
                            img.src = src; // Tải ảnh thực tế
                            img.classList.remove('loading'); // Xóa hiệu ứng loading
                            img.onerror = function () {
                                console.error('Error loading image:', src);
                                img.src = '/images/placeholder.jpg'; // Ảnh thay thế nếu lỗi
                            };
                            observer.unobserve(img); // Ngừng quan sát sau khi tải
                        }
                    });
                });

                images.forEach(img => imageObserver.observe(img));
            } else {
                // Fallback cho trình duyệt không hỗ trợ IntersectionObserver
                images.forEach(img => {
                    const src = img.getAttribute('data-src');
                    img.src = src;
                    img.classList.remove('loading');
                    img.onerror = function () {
                        console.error('Error loading image:', src);
                        img.src = '/images/placeholder.jpg';
                    };
                });
            }

            // Log để debug
            console.log('Total images:', images.length);
        });

        // Xử lý chuyển chapter
        function goToPrevChapter() {
            const select = document.getElementById('chapter-select-top');
            const MangaId = document.querySelector('input[name="MangaId"]').value;
            const input = document.querySelector('input[name="PrevChapterId"]');
            const prevChapterId = input ? input.value.trim() : '';
            if (!prevChapterId) {
                const modal = document.getElementById('noPrevChapterModal');
                if (modal) {
                    const modalInstance = new bootstrap.Modal(modal);
                    modalInstance.show();
                } else {
                    alert('Đây là chương đầu tiên rồi, không có chương trước đó nữa đâu!');
                }
            } else {
                window.location.href = `/Manga/ReadManga?MangaId=${MangaId}&ChapterId=${prevChapterId}`; // Điều hướng tới chapter sau
            }
        }
         
        function goToNextChapter() {
            const select = document.getElementById('chapter-select-top');
            const MangaId = document.querySelector('input[name="MangaId"]').value;
            const input = document.querySelector('input[name="NextChapterId"]');
            const nextChapterId = input ? input.value.trim() : '';
            if (!nextChapterId) {
                const modal = document.getElementById('noNextChapterModal');
                if (modal) {
                    const modalInstance = new bootstrap.Modal(modal);
                    modalInstance.show();
                } else {
                    alert('Chưa có chương tiếp theo. Mong bạn quay lại sau.');
                }
            } else {
                window.location.href = `/Manga/ReadManga?MangaId=${MangaId}&ChapterId=${nextChapterId}`; // Điều hướng tới chapter sau
            }
        }

        // Xử lý khi chọn chapter từ dropdown (cả top và bottom)
        document.getElementById('chapter-select-top').addEventListener('change', function () {
            const ChapterId = this.value;
            const MangaId = document.querySelector('input[name="MangaId"]').value;
            window.location.href = `/Manga/ReadManga?MangaId=${MangaId}&ChapterId=${ChapterId}`; // Điều hướng tới chapter được chọn
        });

        document.getElementById('chapter-select-bottom').addEventListener('change', function () {
            const ChapterId = this.value;
            const MangaId = document.querySelector('input[name="MangaId"]').value;
            window.location.href = `/Manga/ReadManga?MangaId=${MangaId}&ChapterId=${ChapterId}`; // Điều hướng tới chapter được chọn
        });

        // Xử lý checkbox (placeholder)
        document.getElementById('same-uploader').addEventListener('change', function () {
            console.log('Same uploader only:', this.checked);
        });

        // Xử lý post comment (placeholder)
        function postComment() {
            console.log('Post Comment clicked');
            alert('Please sign in to post a comment.');
        }

        // Scroll to top
        function scrollToTop() {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }
    </script>
</body>
</html>